class Solution:
    def gardenNoAdj(self, N: int, paths: List[List[int]]) -> List[int]:
        res = [0 for _ in range(N)]
        gars = [[] for k in range(N+1)]

        '''for i in range(len(paths)):
            gars[paths[i][0]].append(paths[i][1])
            gars[paths[i][1]].append(paths[i][0])'''
        #简化写法
        for x,y in paths:
            gars[x].append(y)
            gars[y].append(x)

        print(gars)



        num =1
        for j in range(1,N+1):
            res[j-1] = ({1,2,3,4}-{res[k-1] for k in gars[j]}).pop()

            #思路不对，1相连的颜色未必是2，3，4还可能是是2，2，2这种。
            #思路是一个点上色之后，相邻的依次上色


            '''if res[j-1] == 0:
                res[j-1] =num
                num = num%4+1
            if gars[j]:
                for k in range(len(gars[j])):
                    if res[gars[j][k]-1] == 0:
                        res[gars[j][k]-1] = num
                        num = num%4+1'''
        return res
            


